{"version":3,"sources":["Tableau.js","App.js","reportWebVitals.js","index.js"],"names":["Tableau","cards","onCardClick","clicks","onClicksClick","className","map","c","Card","card","onClick","index","value","type","faceDown","initCards","count","Array","fill","e","i","App","useState","cardCount","setCardCount","setCards","setClicks","min","max","onChange","event","Math","target","set","floor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAAe,SAASA,EAAT,GAA+D,IAA7CC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,cACzD,OAAO,sBAAKC,UAAU,UAAf,UACDJ,EAAMK,KAAI,SAAAC,GAAC,OAAI,cAACC,EAAD,CAAoBC,KAAMF,EAAGG,QAAS,kBAAMR,EAAYK,EAAEI,SAA/CJ,EAAEI,UAC9B,wBAAQN,UAAU,SAASK,QAASN,EAApC,SAAoDD,EAAOS,WAInE,SAASJ,EAAT,GAAgC,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,QACjB,OAAO,wBAAQG,KAAK,cAAcR,UAAS,eAAUI,EAAKK,SAAW,YAAc,WAAaJ,QAASA,ICJ7G,IAAMK,EAAY,SAAAC,GAAK,OAAIC,MAAMD,GAAOE,KAAK,IAAIZ,KAAI,SAACa,EAAEC,GAAH,MAAU,CAAET,MAAOS,EAAGN,UAAU,OA8CtEO,MA5Cf,WAAgB,IAAD,EACuBC,mBAAS,IADhC,mBACJC,EADI,KACOC,EADP,OAEeF,mBAASP,EAAUQ,IAFlC,mBAEJtB,EAFI,KAEGwB,EAFH,OAGiBH,mBAAS,GAH1B,mBAGJnB,EAHI,KAGIuB,EAHJ,KA4BX,OAAO,sBAAKrB,UAAU,MAAf,UACH,sBAAKA,UAAU,aAAf,UACI,sDAAwB,uBAAOQ,KAAK,SAASc,IAAI,IAAIC,IAAI,MAAMhB,MAAOW,EAAWM,SAT3D,SAAAC,GAC1B,IAAMP,EAAYQ,KAAKJ,IAAII,KAAKH,IAAyB,EAArBE,EAAME,OAAOpB,MAAW,GAAI,KAChEY,EAAaD,GACbE,EAASV,EAAUQ,IACnBG,EAAU,SAKqH,uBAC3H,uBACA,oEAEJ,cAAC1B,EAAD,CAASC,MAAOA,EAAOC,YA7BH,SAAAS,IACU,IAA1BV,EAAMU,GAAOG,WACbY,GAAU,SAAAvB,GAAM,OAAIA,EAAS,KAC7BsB,EACIxB,EAAMK,KAAI,SAAAC,GAAC,OAAIA,EAAEI,QAAUA,EAAZ,2BAAwBJ,GAAxB,IAA2BO,UAAU,IAASP,KACvDD,KAAI,SAAAC,GAAC,OAAIA,EAAEI,QAAUA,EAAQ,EAApB,2BAA4BJ,GAA5B,IAA+BO,UAAWP,EAAEO,WAAYP,QAwB1BJ,OAAQ,CAACS,MAAMT,EAAQ8B,IAAIP,GAAYtB,cAlBtE,SAAA0B,GACtBL,EAASV,EAAUQ,IACnBG,EAAU,MAiBV,sBAAKrB,UAAU,WAAf,qCAC4B,uBAD5B,IAEK,sCAFL,wBAE+B0B,KAAKG,MAAMX,EAAY,GAAG,uBAFzD,IAGK,sCAHL,uBAGuC,oCAHvC,cAG+DA,EAAYA,EAAYA,GAAW,EAAE,uBAAK,uBAHzG,UAIW,sCAJX,uDC7BOY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f549229a.chunk.js","sourcesContent":["export default function Tableau({cards, onCardClick, clicks, onClicksClick}) {\r\n    return <div className=\"tableau\">\r\n        { cards.map(c => <Card key={c.index} card={c} onClick={() => onCardClick(c.index)} />) }\r\n        <button className=\"clicks\" onClick={onClicksClick}>{clicks.value}</button>\r\n    </div>\r\n}\r\n\r\nfunction Card({card, onClick}) {\r\n    return <button type=\"# of clicks\" className={`card ${card.faceDown ? 'face-down' : 'face-up'}`} onClick={onClick}></button>\r\n}","import { useState } from 'react';\nimport './App.css';\nimport Tableau from './Tableau';\n\nconst initCards = count => Array(count).fill({}).map((e,i) => ({ index: i, faceDown: true }));\n\nfunction App() {\n    const [cardCount, setCardCount] = useState(10);\n    const [cards, setCards] = useState(initCards(cardCount))\n    const [clicks, setClicks] = useState(0);\n\n    const handleCardClick = index => {\n        if (cards[index].faceDown === true) {\n            setClicks(clicks => clicks + 1);\n            setCards(\n                cards.map(c => c.index === index ? {...c, faceDown: false} : c ) // Turn the clicked card face-up.\n                     .map(c => c.index === index + 1 ? {...c, faceDown: !c.faceDown} : c) // Toggle the card to the right if it exists.\n                );\n\n        } \n    }\n\n    const handleClicksClick = event => {\n        setCards(initCards(cardCount));\n        setClicks(0);\n    }\n\n    const handleCardCountChange = event => {\n        const cardCount = Math.min(Math.max(event.target.value * 1, 1), 100);\n        setCardCount(cardCount);\n        setCards(initCards(cardCount));\n        setClicks(0);\n    }\n\n    return <div className=\"app\">\n        <div className=\"parameters\">\n            <label>Number of cards: <input type=\"number\" min=\"1\" max=\"100\" value={cardCount} onChange={handleCardCountChange}/></label><br/>\n            <br/>\n            <em>Click the # of clicks to reset.</em>\n        </div>\n        <Tableau cards={cards} onCardClick={handleCardClick} clicks={{value:clicks, set:setClicks}} onClicksClick={handleClicksClick}/>\n        <div className=\"analysis\">\n            For n number of cards...<br/>\n            n<sub>min</sub> = ⌊n/2⌋ = {Math.floor(cardCount / 2)}<br/>\n            n<sub>max</sub> = (n + 1)(n/2) = (n<sup>2</sup> + n)/2 = {(cardCount * cardCount + cardCount)/2}<br/><br/>\n            Note: n<sub>max</sub> is equal to the average of n and its square.\n        </div>\n    </div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}