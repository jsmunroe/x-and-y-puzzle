{"version":3,"sources":["Tableau.js","App.js","reportWebVitals.js","index.js"],"names":["Tableau","cards","onCardClick","className","map","c","Card","card","onClick","index","faceDown","initCards","count","Array","fill","e","i","App","useState","cardCount","setCards","clicks","setClicks","event","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAAe,SAASA,EAAT,GAAwC,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,YAEpC,OAAO,qBAAKC,UAAU,UAAf,SACDF,EAAMG,KAAI,SAAAC,GAAC,OAAI,cAACC,EAAD,CAAoBC,KAAMF,EAAGG,QAAS,kBAAMN,EAAYG,EAAEI,SAA/CJ,EAAEI,YAItC,SAASH,EAAT,GAAgC,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,QACjB,OAAO,wBAAQL,UAAS,eAAUI,EAAKG,SAAW,YAAc,WAAaF,QAASA,ICJ1F,IAAMG,EAAY,SAAAC,GAAK,OAAIC,MAAMD,GAAOE,KAAK,IAAIV,KAAI,SAACW,EAAEC,GAAH,MAAU,CAAEP,MAAOO,EAAGN,UAAU,OA6BtEO,MA3Bf,WAAgB,IAAD,EACuBC,mBAAS,IADhC,mBACJC,EADI,aAEeD,mBAASP,EAAUQ,KAFlC,mBAEJlB,EAFI,KAEGmB,EAFH,OAGiBF,mBAAS,GAH1B,mBAGJG,EAHI,KAGIC,EAHJ,KAqBX,OAAO,sBAAKnB,UAAU,MAAf,UACH,cAACH,EAAD,CAASC,MAAOA,EAAOC,YAjBH,SAAAO,IACU,IAA1BR,EAAMQ,GAAOC,WACbY,GAAU,SAAAD,GAAM,OAAIA,EAAS,KAC7BD,EACInB,EAAMG,KAAI,SAAAC,GAAC,OAAIA,EAAEI,QAAUA,EAAZ,2BAAwBJ,GAAxB,IAA2BK,UAAU,IAASL,KACvDD,KAAI,SAAAC,GAAC,OAAIA,EAAEI,QAAUA,EAAQ,EAApB,2BAA4BJ,GAA5B,IAA+BK,UAAWL,EAAEK,WAAYL,UAa/E,wBAAQF,UAAU,SAASK,QAPL,SAAAe,GACtBH,EAAST,EAAUQ,IACnBG,EAAU,IAKV,SAAwDD,QCjBjDG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d88da424.chunk.js","sourcesContent":["export default function Tableau({cards, onCardClick}) {\r\n\r\n    return <div className=\"tableau\">\r\n        { cards.map(c => <Card key={c.index} card={c} onClick={() => onCardClick(c.index)} />) }\r\n    </div>\r\n}\r\n\r\nfunction Card({card, onClick}) {\r\n    return <button className={`card ${card.faceDown ? 'face-down' : 'face-up'}`} onClick={onClick}></button>\r\n}","import { useState } from 'react';\nimport './App.css';\nimport Tableau from './Tableau';\n\nconst initCards = count => Array(count).fill({}).map((e,i) => ({ index: i, faceDown: true }));\n\nfunction App() {\n    const [cardCount, setCardCount] = useState(10);\n    const [cards, setCards] = useState(initCards(cardCount))\n    const [clicks, setClicks] = useState(0);\n\n    const handleCardClick = index => {\n        if (cards[index].faceDown === true) {\n            setClicks(clicks => clicks + 1);\n            setCards(\n                cards.map(c => c.index === index ? {...c, faceDown: false} : c ) // Turn the clicked card face-up.\n                     .map(c => c.index === index + 1 ? {...c, faceDown: !c.faceDown} : c) // Toggle the card to the right if it exists.\n                );\n\n        } \n    }\n\n    const handleClicksClick = event => {\n        setCards(initCards(cardCount));\n        setClicks(0);\n    }\n\n    return <div className=\"app\">\n        <Tableau cards={cards} onCardClick={handleCardClick}/>\n        <button className=\"clicks\" onClick={handleClicksClick}>{clicks}</button>\n    </div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}